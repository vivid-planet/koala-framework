"use strict";
const Config = require("webpack-config").Config;
const TrlHtmlWebpackPlugin = require("../trl/trl-html-webpack-plugin");
const fetchLanguages = require("../loader/fetch-languages");
const fetchKwfConfig = require("./fetch-kwf-config");
const fs = require('fs');

const kwfConfig = fetchKwfConfig();
const devBuild = !!process.env.KWF_BUILD_DEV;
const packageClasses = JSON.parse(fs.readFileSync('temp/component-assets-build/package-classes.json', 'utf-8'));

const entry = {
    Admin: ["core-js/es6/promise", require.resolve("../loader/ini-loader") + "?dep=AdminMain!"],
};
packageClasses.forEach(function (packageClass) {
    entry[packageClass] = ["core-js/es6/promise", require.resolve("../loader/ini-loader") + "?dep=" + packageClass + "!"]
});

if (kwfConfig["webpack-dev-server-url"] && devBuild) {
    entry[packageClasses[packageClasses.length - 1]].push("webpack-dev-server/client?" + kwfConfig["webpack-dev-server-url"]);
}

const plugins = [];
fetchLanguages().forEach(language => {
    packageClasses.forEach(function (packageClass) {
        plugins.push(
            new TrlHtmlWebpackPlugin({
                filename: packageClass + "." + language + ".html",
                chunks: [packageClass],
                templateContent: "",
                inject: "head",
                language: language,
                hash: true,
            }),
        );
    });
    plugins.push(
        new TrlHtmlWebpackPlugin({
            filename: "Admin." + language + ".html",
            chunks: packageClasses.concat("Admin"),
            templateContent: "",
            inject: "head",
            language: language,
            hash: true,
        }),
    );
});

module.exports = new Config().extend(require.resolve("./webpack.kwf.config")).merge({
    entry: entry,
    plugins: plugins,
});
